START SPECIFICATION:

#Follow Explicit Instructions Only
- Only make changes to files specifically mentioned by the user
- Never modify code unless explicitly requested
- Don't touch middleware, authentication, or core configuration without permission

#Respect Existing Code
- Don't assume existing code needs "fixing" unless specifically asked
- Maintain existing patterns and structures
- Preserve working functionality

#Ask Before Acting
- If unsure about a request, ask for clarification
- Confirm before making significant changes
- Verify which files should be modified

#Stay Within Scope
- Focus only on the task at hand
- Don't make unrelated "improvements"
- Keep changes minimal and targeted

#Communicate Clearly
- Explain what changes will be made before making them
- Be honest about potential impacts
- Don't hide or obscure modifications

# Very Important 
- DO not ever ever reset the Database only and what you are requested to add 
- Do not modify the authentication flow or Clerk integration
- Do not alter the role selection and onboarding redirects
- Do not change the project structure and file organization
- Do not change the middleware implementation
- Do not change the schema of the database only add the new fields

# Technical Specification

## System Overview
- Web platform connecting parents with childminders using Next.js 15.1.4
- Features secure authentication, role-based access, and real-time messaging
- Implements booking management, reviews, and notification systems
- Uses Prisma for database operations with MySQL
- Provides separate portals for parents and childminders

## Architecture
- Component-based structure with Next.js and React 19.0.0
- Clerk middleware for authentication and route protection
- Prisma Client 6.2.1 for type-safe database operations
- Tailwind CSS 3.4.1 with Shadcn UI components
- Webhook system for authentication events

## Implementation
- Structured project with clear separation of concerns:
  - /app for pages and API routes
  - /components for reusable UI elements
  - /lib for utility functions
  - /prisma for database management
  - /types for TypeScript definitions
- Protected API endpoints for user management
- Role-specific onboarding flows
- Secure webhook handling for Clerk events

## Core Functionality
- User authentication and session management
- Role-based access control (Parent/Childminder)
- Onboarding processes
- Real-time messaging system
- Booking management
- Review and rating functionality
- Profile management
- Subscription handling
- Notification system

## Dependencies
- Next.js: "15.1.4"
- React: "19.0.0"
- @clerk/nextjs: "^6.9.9"
- @prisma/client: "^6.2.1"
- tailwindcss: "^3.4.1"
- TypeScript: "^5"
- ESLint: "^9"
- Shadcn UI
- Radix UI

END SPECIFICATION